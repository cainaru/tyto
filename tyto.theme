<?php

/**
 * @file
 * Functions to support theming in the tyto theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function tyto_preprocess_html(array &$variables) {
  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function tyto_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function tyto_preprocess_page(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function tyto_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function tyto_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function tyto_preprocess_block(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function tyto_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function tyto_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function tyto_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  //$variables['display_submitted'] = FALSE;
}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function tyto_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form().
 */
function tyto_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function tyto_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function tyto_preprocess_field(array &$variables, $hook) {
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function tyto_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function tyto_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form_element().
 */
function tyto_preprocess_form_element(array &$variables) {
  $element = $variables['element'];

  // See https://getbootstrap.com/docs/3.4/css/#forms-controls.
  $variables['is_radio'] = $element['#type'] == 'radio';
  $variables['is_checkbox'] = $element['#type'] == 'checkbox';

  $checkbox = $variables['is_checkbox'];
  $radio = $variables['is_radio'];

  // Determine if the form element should have the "form-group" class added.
  // Use an explicitly set property from the element or use its other
  // properties as the criteria to determine if it should be set.
  $variables['is_form_group'] = $element['#form_group'] || !$checkbox && !$radio && !($element['#type'] == 'hidden');
}

/**
 * Implements hook_theme_suggestions_input_alter().
 */
function tyto_theme_suggestions_input_alter(array &$suggestions, array $variables) {
  $element = $variables['element'];
  $ignoreFormControlTypes = ['checkbox', 'hidden', 'radio'];
  if (!empty($element['#type']) && !in_array($element['#type'], $ignoreFormControlTypes)) {
    $suggestions[] = 'input__form_control';
  }

  $button_types = ['button', 'submit', 'reset', 'image_button'];
  if (!empty($element['#is_button']) || in_array($element['#type'], $button_types)) {
    $suggestions[] = 'input__button';
  }

}

/**
 * Implements hook_preprocess_input().
 */
function tyto_preprocess_input(array &$variables) {
  $element = $variables['element'];
  // Create variables for #input_group and #input_group_button flags.
  $variables['input_group'] = $element['#input_group'] || $element['#input_group_button'];

  // Create 'is-invalid' class if there is an error.
  if (isset($variables['attributes']['class'])) {
    if (is_object($variables['attributes']['class'])) {
      if (in_array('error', $variables['attributes']['class']->value())) {
        $variables['attributes']['class']->addClass('is-invalid');
      }
    }
    elseif (is_array($variables['attributes']['class'])) {
      if (in_array('error', $variables['attributes']['class'])) {
        $variables['attributes']['class'][] = 'is-invalid';
      }
    }
  }


}

/**
 * Implements hook_preprocess_input().
 */
function tyto_preprocess_input__button(array &$variables) {
  $element = $variables['element'];
  // Set #value to be the button label.
  $variables['label'] = $element['#value'];

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function tyto_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}
